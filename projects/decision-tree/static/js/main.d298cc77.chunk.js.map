{"version":3,"sources":["redux/reducers/tree.js","redux/reducers/modal.js","redux/reducers/form.js","redux/reducers/index.js","redux/actions/constants.js","redux/middleware/logger.js","helpers/index.js","redux/middleware/tree.js","redux/store/index.js","redux/store/local-storage.js","components/header/Header.js","components/tree/Tree.js","components/tree/render.js","redux/actions/index.js","components/form/Form.js","components/modal/Modal.js","index.js","DecisionTree.js"],"names":["CONSTANTS","PENDING_CREATE","CREATE","PENDING_EDIT","EDIT","MOVE","DELETE","TOGGLE","initialState","activeNode","shouldUpdate","data","name","description","id","status","children","modalIsOpen","shouldCloseOnOverlayClick","MODES","mode","formData","combineReducers","modal","state","arguments","length","undefined","type","Object","objectSpread","tree","action","parentId","payload","activeState","PENDING","_action$payload","_action$payload2","form","loggerMiddleware","store","next","console","log","getState","findNodeById","treeData","node","traverseTree","d","getChildCount","count","_children","iterator","allChildren","concat","traverseChildren","forEach","child","treeMiddleware","parentNode","newNode","maxId","getMaxId","push","assign","nodeDataObject","_action$payload3","parentNodeDataObject","deletedNodeIndex","findIndex","childNode","splice","_action$payload4","newParentId","originalParentNodeDataObject","newParentNodeDataObject","childNodeIndex","existingState","serializedState","localStorage","getItem","JSON","parse","_unused2","createStore","rootReducer","applyMiddleware","subscribe","stringify","setItem","_unused","saveState","Header","react_default","a","createElement","className","treeGraph","TreeGraph","_ref","dispatch","classCallCheck","this","selectedNode","draggingNode","panSpeed","panBoundary","i","duration","viewerWidth","document","body","clientWidth","viewerHeight","d3","size","baseSvg","append","attr","g","dragBehavior","dragListener","root","x0","y0","update","bindObj","dragStarted","raise","dragged","domNode","select","selectAll","links","target","filter","remove","descendants","dragEnded","moveNode","dispatchActions","newParentNode","parent","defaultPrevented","toggle","initCreateNode","_this","mouseIsHeld","setTimeout","initEditNode","source","each","y","depth","nodeEnter","enter","on","click","bind","dblClick","call","transition","childCount","style","text","overCircle","outCircle","nodeUpdate","merge","x","nodeExit","exit","link","insert","connect","render","apply","toggleNode","_ref4","Form","props","possibleConstructorReturn","getPrototypeOf","updateInput","input","inputName","setState","defineProperty","value","_this2","fields","title","inputs","map","inputValues","onChange","onClick","editNode","createNode","deleteNode","React","Component","_ref2","_ref3","Modal","setAppElement","ModalComponent","lib_default","isOpen","contentLabel","form_Form","closeModal","_state$modal","ReactDOM","es","modal_Modal","Header_Header","tree_Tree","getElementById"],"mappings":"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","file":"static/js/main.d298cc77.chunk.js","sourcesContent":["import {\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  DELETE_NODE,\n  MOVE_NODE,\n  TOGGLE_NODE\n} from '../actions/constants';\n\nconst CONSTANTS = {\n  PENDING_CREATE: 'PENDING',\n  CREATE: 'CREATE',\n  PENDING_EDIT: 'PENDING_EDIT',\n  EDIT: 'EDIT',\n  MOVE: 'MOVE',\n  DELETE: 'DELETE',\n  TOGGLE: 'TOGGLE'\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {  \n    case INIT_CREATE_NODE: {\n      const { parentId } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          activeState: CONSTANTS.PENDING,\n          parentId\n        }\n      }\n    }\n\n    case INIT_EDIT_NODE: {\n      const { \n        id,\n        name,\n        description,\n        parentId \n      } = action.payload; \n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          id,\n          parentId,\n          name,\n          description,\n          activeState: CONSTANTS.PENDING_EDIT\n        }\n      }\n    }\n\n    case CREATE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.CREATE,\n          id\n        }\n      }\n    }\n\n    case EDIT_NODE: {\n      const {\n        name,\n        description,\n        status\n      } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.EDIT,\n          name,\n          description,\n          status\n        }\n      }\n    }\n\n    case MOVE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          id,\n          activeState: CONSTANTS.MOVE\n        }\n      }\n    }\n\n    case DELETE_NODE: {\n     return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.DELETE\n        }\n      }\n    }\n\n    case TOGGLE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          id,\n          activeState: CONSTANTS.TOGGLE\n        }\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = {   \n    \"activeNode\": null,\n    \"shouldUpdate\": true,\n    \"data\": {\n      \"name\": \"A\",\n      \"description\": \"Node A\",\n      \"id\": 1,\n      \"status\": \"INCLOMPLETE\",\n      \"children\": [\n        { \n            \"name\": \"B\",\n            \"description\": \"Node B\",\n            \"status\": \"INCLOMPLETE\",\n            \"id\": 2\n        },\n        {\n          \"name\": \"C\",\n          \"description\": \"Node C\",\n          \"status\": \"INCLOMPLETE\",\n          \"id\": 3,\n          \"children\": [\n              { \n                  \"name\": \"D\",\n                  \"description\": \"Node D\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 4\n              }, \n              { \n                  \"name\": \"E\",\n                  \"description\": \"Node E\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 5\n              }, \n              { \n                  \"name\": \"F\",\n                  \"description\": \"Node F\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 7 \n              }\n            ]\n        },\n        { \n            \"name\": \"G\",\n            \"description\": \"Node G\",\n            \"status\": \"INCLOMPLETE\",\n            \"id\": 6\n        },\n        {\n            \"name\": \"H\",\n            \"description\": \"Node H\",\n            \"status\": \"INCLOMPLETE\",\n            \"id\": 10,\n            \"children\": [\n              { \n                  \"name\": \"I\",\n                  \"description\": \"Node I\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 9\n              }, \n              { \n                  \"name\": \"J\",\n                  \"description\": \"Node J\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 11 \n              }\n            ]\n        },\n        { \n            \"name\": \"K\",\n            \"description\": \"Node K\",\n            \"status\": \"INCLOMPLETE\",\n            \"id\": 8\n        }\n      ]\n    }\n}\n","import {\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  DELETE_NODE,\n  CLOSE_MODAL\n} from '../actions/constants';\n\nconst initialState = {\n    modalIsOpen: false,\n    shouldCloseOnOverlayClick: true\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case INIT_CREATE_NODE: {\n      return {\n        ...state,\n        modalIsOpen: true\n      };\n    }\n\n    case INIT_EDIT_NODE: {\n      return {\n        ...state,\n        modalIsOpen: true\n      }\n    }\n\n    case CREATE_NODE:\n    case EDIT_NODE:\n    case DELETE_NODE:\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        modalIsOpen: false\n      }\n    } \n\n    default:\n      return state;\n  }\n}\n","import {\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  // DELETE_NODE,\n  CLOSE_MODAL\n} from '../actions/constants';\n\nconst MODES = {\n  DEFAULT: null,\n  CREATE: 'CREATE',\n  EDIT: 'EDIT'\n}\n\nconst initialState = {\n    mode: MODES.DEFAULT,\n    formData: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n      case INIT_CREATE_NODE: {\n        return {\n          ...state,\n          mode: MODES.CREATE\n        };\n      }\n\n      case INIT_EDIT_NODE: {\n        return {\n          ...state,\n          mode: MODES.EDIT\n        }\n      }\n\n      case EDIT_NODE: {\n        const {\n          id,\n          name,\n          description\n        } = action.payload;\n\n        return {\n          ...state,\n          mode: MODES.EDIT,\n          formData: {\n            id,\n            name,\n            description\n          }\n        };\n      }\n\n      case CREATE_NODE:\n      case CLOSE_MODAL: {\n        return {\n          ...state,\n          mode: MODES.DEFAULT\n        }\n      } \n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport tree from './tree';\nimport modal from './modal';\nimport form from './form';\n\nexport default combineReducers(\n\t{ \n\t\tmodal,\n\t\ttree,\n\t\tform \n\t}\n);\n","export const DELETE_NODE = 'DELETE_NODE';\nexport const INIT_EDIT_NODE = 'INIT_EDIT_NODE';\nexport const EDIT_NODE = 'EDIT_NODE';\nexport const MOVE_NODE = 'MOVE_NODE';\nexport const INIT_CREATE_NODE = 'INIT_CREATE_NODE';\nexport const CREATE_NODE = 'CREATE_NODE';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const TOGGLE_NODE = 'TOGGLE_NODE';\n","const loggerMiddleware = store => next => action => {\n  console.log('initial state:', store.getState())\n  console.log('dispatching:', action)\n  next(action)\n  console.log('next state:', store.getState())\n}\n\nexport default loggerMiddleware;\n","export function findNodeById (treeData, id) {\n\tlet node;\n\n\ttraverseTree(\n\t\ttreeData,\n\t\t(d) => {\n\t\t\tconst {\n\t\t\t\tdata\n\t\t\t} = d;\n\n\t\t\t/*\n\t\t\t\tIf D3 data (raw data processed using D3), each node will have a data property. \n\t\t\t\tIf it is just the raw data, it will be a regular object.\n\t\t\t*/\n\n\t\t\tif (data) {\n\t\t\t\tif (data.id === id) {\n\t\t\t\t\tnode = d\n\t\t\t\t}\n\t\t\t} else if (d.id === id) {\n\t\t\t\tnode = d;\n\t\t\t}\n\t\t}\n\t)\n\n\treturn node || {};\n}\n\nexport function getChildCount (node) {\n\tlet count = 0;\n\n\tif (!node._children) {\n\t\treturn count;\n\t}\n\n\ttraverseTree(\n\t\tnode,\n\t\t(d) => {\n\t\t\tconst {\n\t\t\t\tchildren,\n\t\t\t\t_children\n\t\t\t} = d;\n\n\t\t\tif (children && children.length) {\n\t\t\t\tcount += children.length;\n\t\t\t}\n\n\t\t\tif (_children && _children.length) {\n\t\t\t\tcount += _children.length\n\t\t\t}\n\t\t}\n\t);\n\n\treturn count;\n}\n\nexport function getMaxId (treeData) {\n\tlet maxId = 0;\n\n\ttraverseTree(\n\t\ttreeData,\n\t\t(d) => {\n\t\t\tif (d.id > maxId) {\n\t\t\t\tmaxId = d.id;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn maxId;\n}\n\nexport function traverseTree (treeData, iterator) {\n\titerator(treeData);\n\n\tfunction traverseChildren (node) {\n\t\tconst {\n\t\t\tchildren,\n\t\t\t_children\n\t\t} = node;\n\n\t\tlet allChildren = [];\n\n\t\tif (children && children.length) {\n\t\t\tallChildren = allChildren.concat(children);\n\t\t}\n\n\t\tif (_children && _children.length) {\n\t\t\tallChildren = allChildren.concat(_children);\n\t\t}\n\n\t\treturn allChildren.length ? allChildren : null;\n\t}\n\n\tconst children = traverseChildren(treeData);\n\t\n\tif (children) {\n\t    children.forEach((child) => traverseTree(\n\t    \tchild,\n\t    \titerator\n\t    ));\n\t}\n}\n","import {\n\tfindNodeById,\n\tgetMaxId\n} from '../../helpers';\n\nimport {\n\tCREATE_NODE,\n\tMOVE_NODE,\n\tEDIT_NODE,\n\tDELETE_NODE,\n\tTOGGLE_NODE\n} from '../actions/constants';\n\nconst treeMiddleware = store => next => action => {\n\tconst {\n\t\ttree: {\n\t\t\tdata\n\t\t}\n\t} = store.getState();\n\n\tswitch (action.type) {\n\t\tcase CREATE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tname,\n\t\t\t\t\tparentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst parentNode = findNodeById(data, parentId);\n\t\t\tconst maxId = getMaxId(data);\n\n\t\t\tconst newNode = {\n\t\t\t\tid: maxId + 1,\n\t\t\t\tname\n\t\t\t};\n\n\t\t\tparentNode.children && parentNode.children.length ? \n\t\t\t  parentNode.children.push(newNode) :\n\t\t\t  parentNode.children = [ newNode ];\n\n\t\t\t Object.assign(\n\t\t\t \taction.payload,\n\t\t\t \t{\n\t\t\t \t\tid: newNode.id\n\t\t\t \t}\n\t\t\t );\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase EDIT_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\n\t\t\tObject.assign(\n\t\t\t\tnodeDataObject,\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase DELETE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tparentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst parentNodeDataObject = findNodeById(data, parentId);\n\n\t\t\tconst deletedNodeIndex = parentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.findIndex((childNode) => childNode.id === id);\n\n\t\t\tparentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.splice(deletedNodeIndex, 1);\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase TOGGLE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\t\t\tconst { \n\t\t\t\tchildren,\n\t\t\t\t_children\n\t\t\t} = nodeDataObject;\n\n\t\t\tif (children && children.length) {\n\t\t\t\tnodeDataObject._children = children;\n\t\t\t\tnodeDataObject.children = null;\n\t\t\t} else if (_children && _children.length) {\n\t\t\t\tnodeDataObject.children = _children;\n\t\t\t\tnodeDataObject._children = null;\n\t\t\t}\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase MOVE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tparentId,\n\t\t\t\t\tnewParentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\t\t\tconst originalParentNodeDataObject = findNodeById(data, parentId);\n\t\t\tconst newParentNodeDataObject = findNodeById(data, newParentId)\n\n\t\t\tconst childNodeIndex = originalParentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.findIndex((childNode) => childNode.id === nodeDataObject.id);\n\n\t\t\toriginalParentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.splice(childNodeIndex, 1);\n\n\t\t\tif (newParentNodeDataObject.children && newParentNodeDataObject.children.length) {\n\t\t\t\tnewParentNodeDataObject\n\t\t\t\t\t.children\n\t\t\t\t\t.push(nodeDataObject);\n\t\t\t} else {\n\t\t\t\tnewParentNodeDataObject.children = [ nodeDataObject ];\n\t\t\t}\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn next(action);\n\t}\n}\n\nexport default treeMiddleware;\n","import { \n\tcreateStore, \n\tapplyMiddleware \n} from 'redux';\n\nimport rootReducer from '../reducers';\nimport loggerMiddleware from '../middleware/logger';\nimport treeMiddleware from '../middleware/tree';\n\nimport {\n\tgetState,\n\tsaveState\n} from './local-storage';\n\nconst existingState = getState();\n\nconst store = createStore(\n\trootReducer,\n\texistingState,\n\tapplyMiddleware(\n\t\tloggerMiddleware,\n\t\ttreeMiddleware\n\t)\n);\n\nstore.subscribe(\n\t() => saveState(store.getState())\n);\n\nexport default store;\n","export const saveState = (state) => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\t\tlocalStorage.setItem('state', serializedState);\n\t} catch {}\n}\n\nexport const getState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem('state');\n\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serializedState);\n\t} catch {\n\t\treturn undefined;\n\t}\n}\n","import React from 'react';\nimport './Header.css';\n\nexport default function Header() {\n  return (\n    <div className=\"Header\">\n    </div>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Tree.css';\nimport {\n\tinitCreateNode,\n\tinitEditNode,\n\tmoveNode,\n\ttoggleNode\n} from '../../redux/actions';\n\nimport TreeGraph from './render';\n\nlet treeGraph;\n\nfunction Tree() {\t\n\treturn (\n\t  <div className=\"Tree\">\n\t  \t<div id=\"decision-tree-container\" />\n\t  </div>\t\n\t);\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\tsetTimeout (() => {\n\t\ttreeGraph = new TreeGraph({ dispatch });\n\t\ttreeGraph.render({ data: {} });\n\t}, 300);\n\n\treturn {\n\t\tinitCreateNode: (...args) => dispatch(initCreateNode(...args)),\n\t\tinitEditNode: (...args) => dispatch(initEditNode(...args)),\n\t\tmoveNode: (...args) => dispatch(moveNode(...args)),\n\t\ttoggleNode: (...args) => dispatch(toggleNode(...args))\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst {\n\t\ttree\n\t} = state;\n\n\tif (!tree || !tree.shouldUpdate) {\n\t\treturn;\n\t}\n\n\tsetTimeout(() => {\n\t\ttreeGraph.render(tree);\n\t\treturn state;\n\t}, 500);\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Tree);\n","import * as d3 from 'd3'\n\nimport {\n\tINIT_CREATE_NODE,\n\tINIT_EDIT_NODE,\n\tMOVE_NODE,\n\tTOGGLE_NODE\n} from '../../redux/actions/constants';\n\nimport {\n\tgetChildCount\n} from '../../helpers';\n\nexport default class TreeGraph {\n\n\tconstructor ({ dispatch }) {\n\t\tconst bindObj = this;\n\t\tthis.selectedNode = null;\n\t\tthis.draggingNode = null;\n\n\t\tthis.dispatch = dispatch;\n\n\t\tthis.panSpeed = 200;\n\t\tthis.panBoundary = 20;\n\n\t\tthis.i = 0;\n\t\tthis.duration = 750;\n\n\t\tthis.viewerWidth = document.body.clientWidth * 2;\n\t\t// this.viewerHeight = document.body.clientHeight;\n\t\tthis.viewerHeight = 400;\n\n\t\tthis.tree = d3.tree().size([\n\t\t\tbindObj.viewerHeight,\n\t\t\tbindObj.viewerWidth\n\t\t]);\n\n\t\tthis.baseSvg = d3.select('#decision-tree-container')\n\t\t\t.append('svg')\n\t\t\t.attr('width', bindObj.viewerWidth)\n\t\t\t.attr('height', bindObj.viewerHeight)\n\t\t\t.attr('class', 'overlay');\n\n\t\tthis.g = d3.select('#decision-tree-container svg')\n\t\t\t.append('g')\n\t\t\t.attr('transform', 'translate(80,0)');\n\n\t\tthis.dragBehavior = this.dragListener();\n\t}\n\n\trender (treeData) {\n\t\tconst {\n\t\t\tdata,\n\t\t\tactiveNode\n\t\t} = treeData;\n\n\t\tthis.treeData = data;\n\n\t\t// if (activeNode) {\n\t\t// \tlet nodeToUpdate;\n\t\t// \tswitch (activeNode.activeState) {\n\t\t// \t\tcase 'CREATE':\n\t\t// \t\t\tconst newTree = d3.hierarchy(data);\n\t\t// \t\t\treturn this.update(newTree);\n\n\t\t// \t\tcase 'EDIT':\n\t\t// \t\t\tnodeToUpdate = findNodeById(this.root, activeNode.id);\n\t\t// \t\t\treturn this.update(nodeToUpdate);\n\t\t// \t}\n\t\t// }\n\n\t\tthis.root = d3.hierarchy(this.treeData);\n\t\tthis.root.x0 = this.viewerHeight / 2; //work with this\n\t\tthis.root.y0 = 100; //should be dynamic\n\t\tthis.update(this.root);\n\t}\n\n\tdragListener () {\n\t\tconst bindObj = this;\n\n\t\tfunction dragStarted (node) {\n\t\t\tif (node === bindObj.root) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbindObj.dragStarted = true;\n\n\t\t\td3.select(this)\n\t\t\t\t.raise()\n\t\t\t\t.attr('stroke', 'black');\n\t\t}\n\n\t\tfunction dragged (node) {\n\t\t\tif (bindObj.dragStarted) {\n\t\t\t\tbindObj.domNode = this;\n\n\t\t\t\td3.select(this)\n\t\t\t\t\t.select('.ghostCircle')\n\t\t\t\t\t.attr('pointer-events', 'none');\n\n\t\t\t\td3.selectAll('.ghostCircle')\n\t\t\t\t\t.attr('class', 'ghostCircle show');\n\n\t\t\t\td3.select(this)\n\t\t\t\t\t.attr('class', 'node activeDrag');\n\n\t\t\t\tbindObj.g.selectAll('path.link')\n\t\t\t\t\t.data(\n\t\t\t\t\t\tbindObj.root.links(),\n\t\t\t\t\t\t(d) => d.target.id\n\t\t\t\t\t)\n\t\t\t\t\t.filter((d, i) => d.target.id === node.id)\n\t\t\t\t\t.remove();\n\n\t\t\t\tbindObj.g.selectAll('g.node')\n\t\t\t\t\t.data(\n\t\t\t\t\t\tbindObj.root.descendants(),\n\t\t\t\t\t\t(d) => d.id\n\t\t\t\t\t)\n\t\t\t\t\t.filter((d, i) => d.id === node.id)\n\t\t\t\t\t.remove();\n\t\t\t\t\t// .attr('cx', (d) => node.x = d3.event.x)\n\t\t\t\t\t// .attr('cy', (d) => node.y = d3.event.y)\n\t\t\t\t\t// .attr('cx', (d) => node.y0 = d3.event.x)\n\t\t\t\t\t// .attr('cy', (d) => node.x0 = d3.event.y)\n\t\t\t\t\t// .attr(\n\t\t\t\t\t// \t'transform', \n\t\t\t\t\t// \t(d) => `translate(${d.y0 - 115},${d.x0 + 120})`\n\t\t\t\t\t// );\n\t\t\t}\n\t\t}\n\n\t\tfunction dragEnded (node) {\n\t\t\td3.selectAll('.ghostCircle')\n\t\t\t\t.attr('class', 'ghostCircle');\n\n\t\t\tif (!bindObj.selectedNode) {\n\t\t\t\treturn bindObj.update(node);\n\t\t\t}\n\n\t\t\tbindObj.moveNode(\n\t\t\t\tnode,\n\t\t\t\tbindObj.selectedNode\n\t\t\t);\n\n\t\t\td3.select(this)\n\t\t\t\t.attr('stroke', null);\n\t\t}\n\n\t\treturn {\n\t\t\tdragStarted,\n\t\t\tdragged,\n\t\t\tdragEnded\n\t\t};\n\t}\n\n\tdispatchActions (action) {\n\t\tthis.dispatch(action);\n\t}\n\n\tinitCreateNode (node) {\n\t\tthis.dispatchActions({\n\t\t\ttype: INIT_CREATE_NODE,\n\t\t\tpayload: {\n\t\t\t\tparentId: node.data.id\n\t\t\t}\n\t\t});\n\t}\n\n\tmoveNode(node, newParentNode) {\n\t\tthis.dispatchActions({\n\t\t\ttype: MOVE_NODE,\n\t\t\tpayload: {\n\t\t\t\tid: node.data.id,\n\t\t\t\tparentId: node.parent.data.id,\n\t\t\t\tnewParentId: newParentNode.data.id\n\t\t\t}\n\t\t});\n\t}\n\n\tinitEditNode(node) {\n\t\tthis.dispatchActions({\n\t\t\ttype: INIT_EDIT_NODE,\n\t\t\tpayload: {\n\t\t\t\tid: node.data.id,\n\t\t\t\tparentId: node.parent.data.id\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle (node) {\n\t\tthis.dispatchActions({\n\t\t\ttype: TOGGLE_NODE,\n\t\t\tpayload: {\n\t\t\t\tid: node.data.id\n\t\t\t}\n\t\t});\n\t}\n\n\toverCircle (node) {\n\t\tthis.selectedNode = node;\n\t}\n\n\toutCircle () {\n\t\tthis.selectedNode = null;\n\t}\n\n\tclick (node) {\n\t\tif (d3.event.defaultPrevented) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragStarted = false;\n\t\tthis.toggle(node);\n\t}\n\n\tdblClick (node) {\n\t\tthis.initCreateNode(node);\n\t}\n\n\tmouseDown (node) {\n\t\tconst bindObj = this;\n\t\tthis.mouseIsHeld = true;\n\t\tsetTimeout(() => {\n\t\t\tif (!this.mouseIsHeld) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbindObj.initEditNode(node);\n\t\t}, 300);\n\t}\n\n\tmouseUp (node) {\n\t\tconsole.log('mouseUp!')\n\t\tthis.mouseIsHeld = false;\n\t}\n\n\tupdate (source) {\n\t\tconst bindObj = this;\n\n\t\tthis.tree(this.root);\n\t\tthis.root.each((d) => {\n\t\t\td.y = d.depth * 200\n\t\t});\n\n\t\tconst node = this.g.selectAll('.node')\n\t\t\t.data(\n\t\t\t\tbindObj.root.descendants(), \n\t\t\t\t(d) => d.id || (d.id = ++bindObj.i)\n\t\t\t);\n\n\t\tconst nodeEnter = node\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', 'node')\n\t\t\t.attr('transform', (d) => `translate(${source.y0}, ${source.x0})`)\n\t\t\t.on('click', bindObj.click.bind(bindObj))\n\t\t\t.on('dblclick', bindObj.dblClick.bind(bindObj))\n\t\t\t// .on('mouseup', bindObj.mouseUp.bind(bindObj))\n\t\t\t// .on('mousedown', bindObj.mouseDown.bind(bindObj))\n\t\t\t.call(\n\t\t\t\td3.drag()\n\t\t\t\t.on('start', bindObj.dragBehavior.dragStarted)\n\t\t\t\t.on('drag', bindObj.dragBehavior.dragged)\n\t\t\t\t.on('end', bindObj.dragBehavior.dragEnded)\n\t\t\t);\n\n\t\tnodeEnter.append('circle')\n\t\t\t.attr('r', 0)\n\t\t\t.transition()\n\t\t\t.attr('r', (d) => {\n\t\t\t\t\tconst childCount = getChildCount(d.data);\n\t\t\t\t\treturn childCount ? childCount * 4 : 6\n\t\t\t})\n\t\t\t.attr('class', 'nodeCircle')\n\t\t\t.style(\n\t\t\t\t'fill',\n\t\t\t\t(d) => d.data.status === 'COMPLETE' ? '#3CB371' :\n\t\t\t\t\td.data._children ? 'lightsteelblue' : \n\t\t\t\t\t'#fff'\n\t\t\t);\n\n\t\tnodeEnter.append('text')\n\t\t\t.attr('x', (d) => d.children || d.data._children ? -10 : 10)\n\t\t\t.attr('dy', '.35em')\n\t\t\t.attr('font-size', '150%')\n\t\t\t.attr('class', 'nodeText')\n\t\t\t.attr('text-anchor', (d) => d.children || d.data._children ? 'end' : 'start')\n\t\t\t.text((d) => d.data.name)\n\t\t\t.style('fill-opacity', 0);\n\n\t\tnodeEnter.append('circle')\n\t\t\t.attr('class', 'ghostCircle')\n\t\t\t.attr('r', 20)\n\t\t\t.attr('opacity', 0.2)\n\t\t\t.style('fill', 'red')\n\t\t\t.attr('pointer-events', 'mouseover')\n\t\t\t.on('mouseover', (node) => {\n\t\t\t\tbindObj.overCircle(node);\n\t\t\t})\n\t\t\t.on('mouseout', (node) => {\n\t\t\t\tbindObj.outCircle(node);\n\t\t\t});\n\n\t\tconst nodeUpdate = nodeEnter.merge(node);\n\n\t\tnodeUpdate\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t(d) => `translate(${d.y},${d.x})`\n\t\t\t);\n\n\t\tnodeUpdate.select('circle.nodeCircle')\n\t\t\t.attr('r', (d) => {\n\t\t\t\t\tconst childCount = getChildCount(d.data);\n\t\t\t\t\treturn childCount ? childCount * 4 : 6\n\t\t\t})\n\t\t\t.style(\n\t\t\t\t'fill',\n\t\t\t\t(d) => d.data.status === 'COMPLETE' ? '#3CB371' :\n\t\t\t\t\td.data._children ? 'lightsteelblue' : \n\t\t\t\t\t'#fff'\n\t\t\t);\n\n\t\tnodeUpdate\n\t\t\t.select('text')\n\t\t\t.transition()\n\t\t\t.attr('x', \n\t\t\t\t(d) => \n\t\t\t\t\td.children ? -10 :\n\t\t\t\t\td.data._children ? (-10 - (d.data._children.length * 2)) : \n\t\t\t\t\t10\n\t\t\t)\n\t\t\t.style('fill-opacity', 1);\n\n\t\tconst nodeExit = node\n\t\t\t.exit()\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t`translate(${source.y}, ${source.x})`\n\t\t\t)\n\t\t\t.remove();\n\n\t\tnodeExit\n\t\t\t.select('circle')\n\t\t\t.attr('r', 0);\n\n\t\tnodeExit\n\t\t\t.select('text')\n\t\t\t.style('fill-opacity', 0);\n\n\t\tconst link = this.g.selectAll('.link')\n    \t\t.data(\n    \t\t\tbindObj.root.links(), \n    \t\t\t(d) => d.target.id\n    \t\t);\n\n\t\tconst linkEnter = link\n\t\t\t.enter()\n\t\t\t.insert('path', 'g')\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => source.y0)\n\t\t\t\t.y((d) => source.x0)\n\t\t\t);\n\n\t\tconst linkUpdate = linkEnter.merge(link);\n\n\t\tlinkUpdate\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => d.y)\n\t\t\t\t.y((d) => d.x)\n\t\t\t);\n\n\t\tlink.exit()\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => source.y0)\n\t\t\t\t.y((d) => source.x0)\n\t\t\t)\n\t\t\t.remove();\n\n\t\tnode.each((d) => {\n\t\t\td.x0 = d.x;\n\t\t\td.y0 = d.y\n\t\t});\n\t}\n\n}\n","import {\n\tINIT_CREATE_NODE,\n\tCREATE_NODE,\n\tINIT_EDIT_NODE,\n\tEDIT_NODE,\n\tDELETE_NODE,\n\tMOVE_NODE,\n\tCLOSE_MODAL,\n\tTOGGLE_NODE\n} from './constants';\n\nexport const initCreateNode = parentId => ({\n\ttype: INIT_CREATE_NODE,\n\tpayload: {\n\t\tparentId\n\t}\n});\n\nexport const createNode = ({ name, parentId }) => ({\n\ttype: CREATE_NODE,\n\tpayload: {\n\t\tname,\n\t\tparentId\n\t}\n});\n\nexport const initEditNode = id => ({\n\ttype: INIT_EDIT_NODE,\n\tpayload: {\n\t\tid\n\t}\n});\n\nexport const editNode = ({ id, name, description, status }) => ({\n\ttype: EDIT_NODE,\n\tpayload: {\n\t\tid,\n\t\tname,\n\t\tdescription,\n\t\tstatus\n\t}\n});\n\nexport const deleteNode = ({ id, parentId }) => ({\n\ttype: DELETE_NODE,\n\tpayload: {\n\t\tid,\n\t\tparentId\n\t}\n});\n\nexport const moveNode = (id, parentId, newParentId) => ({\n\ttype: MOVE_NODE,\n\tpayload: {\n\t\tid,\n\t\tparentId,\n\t\tnewParentId\n\t}\n});\n\nexport const toggleNode = ({ id }) => ({\n\ttype: TOGGLE_NODE,\n\tpayload: { id }\n});\n\nexport const closeModal = () => ({\n\ttype: CLOSE_MODAL\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  createNode,\n  editNode,\n  deleteNode\n} from '../../redux/actions';\n\nimport fields from './fields.json';\n\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { \n        name: this.props.formData.name || 'Placeholder Name',\n        description: this.props.formData.description || 'Placeholder Description'\n      };\n    }\n\n    updateInput = (input, inputName) => {\n      this.setState({\n        [ inputName ]: input.target.value \n      });\n    }\n\n    render () {\n        return (\n          <div>\n            <h2>{ fields[ this.props.mode ] ? fields[ this.props.mode ].title : 'Hello' }</h2>\n            <form>\n              { \n                fields[ this.props.mode ] ? fields[this.props.mode].inputs.map((inputValues) => {\n                  return (\n                    <div>\n                      <h4>{ inputValues.title }</h4>\n                      <input\n                        type=\"text\"\n                        value={ this.state[inputValues.name] }\n                        onChange={ (input) => this.updateInput(input, inputValues.name) }\n                      >\n                      </input>\n                    </div>\n                  );\n                }) : 'Hi'                  \n              }\n              {\n                <div  \n                  onClick={\n                    () => this.props.mode === 'EDIT' ? this.props.editNode({\n                        id: this.props.formData.id,\n                        name: this.state.name,\n                        description: this.state.description\n                      }\n                    ) : this.props.mode === 'CREATE' ? this.props.createNode({\n                        parentId: this.props.formData.parentId,\n                        name: this.state.name\n                    }) :\n                      \"Hi\"\n                  }\n                >\n                  Add / Update Node\n                </div>\n              }\n              {\n                <div\n                  onClick={\n                    () => this.props.editNode({\n                      id: this.props.formData.id,\n                      status: 'COMPLETE',\n                      name: this.state.name,\n                      description: this.state.description\n                    })\n                  }\n                >\n                  Mark As Complete\n                </div>\n              }\n              {\n                <div\n                  onClick={\n                    () => this.props.deleteNode({\n                      id: this.props.formData.id,\n                      parentId: this.props.formData.parentId\n                    })\n                  }\n                >\n                  Delete\n                </div>\n              }\n            </form>\n          </div>\n        );\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    createNode: (...args) => dispatch(createNode(...args)),\n    editNode: (...args) => dispatch(editNode(...args)),\n    deleteNode: (...args) => dispatch(deleteNode(...args))\n});\n\nconst mapStateToProps = state => {\n  const {\n    form: {\n      mode\n    },\n    tree: {\n      activeNode\n    }\n  } = state;\n\n  if (!mode || !activeNode) {\n    return;\n  }\n\n  const {\n    id,\n    parentId,\n    name,\n    description\n  } = activeNode;\n\n  return {\n    mode,\n    formData: {\n      id,\n      parentId,\n      name,\n      description\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport Form from '../form/Form';\nimport './Modal.css';\n\nimport {\n  closeModal\n} from '../../redux/actions';\n\nModal.setAppElement('#root');\n\nclass ModalComponent extends React.Component {\n    render () {\n        return (\n          <div>\n            <Modal\n              isOpen={this.props.modalIsOpen}\n              shouldCloseOnOverlayClick={this.props.shouldCloseOnOverlayClick}\n              contentLabel=\"Nodal\"\n            >\n              <Form />\n              <div onClick={ this.props.closeModal }>Close</div>\n            </Modal>\n          </div>\n        );\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    closeModal: () => dispatch(closeModal())\n});\n\nconst mapStateToProps = state => {\n  const {\n    modal: {\n      modalIsOpen,\n      shouldCloseOnOverlayClick\n    },\n    tree: {\n      activeNode\n    }\n  } = state;\n\n  if (!activeNode) {\n    return;\n  }\n\n  return {\n    modalIsOpen,\n    shouldCloseOnOverlayClick\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalComponent);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport DecisionTree from './DecisionTree';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<DecisionTree />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n","import React from 'react';\nimport Header from './components/header/Header';\nimport Tree from './components/tree/Tree';\nimport Modal from './components/modal/Modal';\nimport './DecisionTree.css';\n\nexport default function DecisionTree() {\n  return (\n    <div className=\"App\">\n      <Modal />\n      <Header />\n      <Tree />\n    </div>\n  );\n}\n"],"sourceRoot":""}