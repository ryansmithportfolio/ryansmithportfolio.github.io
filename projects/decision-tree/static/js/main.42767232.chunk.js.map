{"version":3,"sources":["redux/actions/constants.js","redux/reducers/tree.js","redux/reducers/modal.js","redux/reducers/form.js","redux/reducers/index.js","redux/middleware/logger.js","helpers/index.js","redux/middleware/tree.js","redux/store/index.js","redux/store/local-storage.js","components/tree/Tree.js","components/tooltip/Tooltip.js","redux/actions/index.js","components/tree/render.js","components/form/Form.js","components/modal/Modal.js","index.js","DecisionTree.js"],"names":["INIT_MOVE_NODE","CONSTANTS","SHOW_OPTIONS","PENDING_CREATE","CREATE","PENDING_EDIT","EDIT","PENDING_MOVE","MOVE","DELETE","TOGGLE","initialState","activeNode","shouldUpdate","data","name","description","id","status","children","modalIsOpen","shouldCloseOnOverlayClick","MODES","mode","formData","combineReducers","modal","state","arguments","length","undefined","type","Object","objectSpread","tree","action","_action$payload","payload","parentId","position","_children","activeState","PENDING","_action$payload2","_action$payload3","form","loggerMiddleware","store","next","console","log","getState","findNodeById","treeData","node","traverseTree","d","getChildCount","count","iterator","allChildren","concat","traverseChildren","forEach","child","treeMiddleware","parentNode","newNode","maxId","getMaxId","childProp","push","assign","nodeDataObject","parentNodeDataObject","deletedNodeIndex","findIndex","childNode","splice","_action$payload4","newParentId","originalParentNodeDataObject","newParentNodeDataObject","childNodeIndex","existingState","serializedState","localStorage","getItem","JSON","parse","_unused2","createStore","rootReducer","applyMiddleware","subscribe","stringify","setItem","_unused","saveState","treeGraph","TooltipComponent","_this","this","_this$props","props","x","y","styles","display","isActive","left","top","react_default","a","createElement","className","style","onClick","initCreateNode","initEditNode","toggleNode","React","Component","connect","ownProps","_activeNode$position","dispatch","apply","_ref3","TreeGraph","_ref","classCallCheck","selectedNode","draggingNode","panSpeed","panBoundary","i","duration","viewerWidth","document","body","clientWidth","viewerHeight","d3","size","baseSvg","append","attr","g","dragBehavior","dragListener","root","x0","y0","update","bindObj","dragStarted","dispatchActions","dragged","domNode","select","selectAll","links","target","filter","remove","dragEnded","moveNode","overCircle","outCircle","parent","newParentNode","defaultPrevented","showNodeOptions","mouseIsHeld","setTimeout","source","each","depth","descendants","nodeEnter","enter","on","click","bind","call","transition","childCount","text","nodeUpdate","merge","nodeExit","exit","link","insert","render","tooltip_Tooltip","Form","possibleConstructorReturn","getPrototypeOf","updateInput","input","inputName","setState","defineProperty","value","_this2","fieldMode","fields","title","inputs","map","inputValues","onChange","createNode","editNode","deleteNode","_state$tree","_findNodeById","_ref2","_ref4","_ref5","ReactModal","setAppElement","ModalComponent","lib_default","isOpen","closeModal","components_form_Form","_state$modal","ReactDOM","es","modal_Modal","tree_Tree","getElementById"],"mappings":"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","file":"static/js/main.42767232.chunk.js","sourcesContent":["export const DELETE_NODE = 'DELETE_NODE';\nexport const SHOW_NODE_OPTIONS = 'SHOW_NODE_OPTIONS';\nexport const INIT_EDIT_NODE = 'INIT_EDIT_NODE';\nexport const EDIT_NODE = 'EDIT_NODE';\nexport const INIT_MOVE_NODE = 'INIT_MOVE_NODE';\nexport const MOVE_NODE = 'MOVE_NODE';\nexport const INIT_CREATE_NODE = 'INIT_CREATE_NODE';\nexport const CREATE_NODE = 'CREATE_NODE';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const TOGGLE_NODE = 'TOGGLE_NODE';\n","import {\n  SHOW_NODE_OPTIONS,\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  DELETE_NODE,\n  INIT_MOVE_NODE,\n  MOVE_NODE,\n  TOGGLE_NODE\n} from '../actions/constants';\n\nconst CONSTANTS = {\n  SHOW_OPTIONS: 'SHOW_OPTIONS',\n  PENDING_CREATE: 'PENDING',\n  CREATE: 'CREATE',\n  PENDING_EDIT: 'PENDING_EDIT',\n  EDIT: 'EDIT',\n  PENDING_MOVE: 'PENDING_MOVE',\n  MOVE: 'MOVE',\n  DELETE: 'DELETE',\n  TOGGLE: 'TOGGLE'\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {  \n    case SHOW_NODE_OPTIONS: {\n      const { \n        id,\n        parentId,\n        position,\n        children,\n        _children\n      } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          id,\n          parentId,\n          position,\n          children,\n          _children,\n          activeState: CONSTANTS.SHOW_OPTIONS\n        }\n      }\n    }\n\n    case INIT_CREATE_NODE: {\n      const { parentId } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          activeState: CONSTANTS.PENDING,\n          parentId\n        }\n      }\n    }\n\n    case INIT_EDIT_NODE: {\n      const { \n        id,\n        name,\n        description,\n        parentId \n      } = action.payload; \n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          id,\n          parentId,\n          name,\n          description,\n          activeState: CONSTANTS.PENDING_EDIT\n        }\n      }\n    }\n\n    case CREATE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.CREATE,\n          id\n        }\n      }\n    }\n\n    case EDIT_NODE: {\n      const {\n        name,\n        description,\n        status\n      } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.EDIT,\n          name,\n          description,\n          status\n        }\n      }\n    }\n\n    case INIT_MOVE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: false,\n        activeNode: {\n          id,\n          activeState: CONSTANTS.PENDING_MOVE\n        }\n      }\n    }\n\n    case MOVE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          id,\n          activeState: CONSTANTS.MOVE\n        }\n      }\n    }\n\n    case DELETE_NODE: {\n     return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          ...state.activeNode,\n          activeState: CONSTANTS.DELETE\n        }\n      }\n    }\n\n    case TOGGLE_NODE: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        shouldUpdate: true,\n        activeNode: {\n          id,\n          activeState: CONSTANTS.TOGGLE\n        }\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = {   \n    \"activeNode\": null,\n    \"shouldUpdate\": true,\n    \"data\": {\n      \"name\": \"A\",\n      \"description\": \"Node A\",\n      \"id\": 1,\n      \"status\": \"INCLOMPLETE\",\n      \"children\": [\n        {\n          \"name\": \"Collapsible node\",\n          \"description\": \"The size of the collapsed node depends on the number of subnodes\",\n          \"status\": \"INCLOMPLETE\",\n          \"id\": 2,\n          \"children\": [\n              { \n                  \"name\": \"Click on me to see node edit & creation options\",\n                  \"description\": \"There are a few :)\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 3\n              }, \n              { \n                  \"name\": \"You can drag and drop nodes around the tree\",\n                  \"description\": \"Pretty neat, huh?\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 4\n              }, \n              { \n                  \"name\": \"Any changes will persist if you refresh\",\n                  \"description\": \"The redux state is saved in local storage, so your session is saved.\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 5 \n              }\n            ]\n        },\n        {\n            \"name\": \"B\",\n            \"description\": \"Node B\",\n            \"status\": \"INCLOMPLETE\",\n            \"id\": 6,\n            \"children\": [\n              { \n                  \"name\": \"Tech stack:\",\n                  \"description\": \"A list of libraries used to make this app\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 7,\n                  \"children\": [\n                      { \n                          \"name\": \"React\",\n                          \"description\": \"A popular, fast library for building UI components\",\n                          \"status\": \"INCLOMPLETE\",\n                          \"id\": 8\n                      }, \n                      { \n                          \"name\": \"D3\",\n                          \"description\": \"For interactive, dynamic data visualizations\",\n                          \"status\": \"INCLOMPLETE\",\n                          \"id\": 9\n                      }, \n                      { \n                          \"name\": \"Redux\",\n                          \"description\": \"State-based, event-driven data flow\",\n                          \"status\": \"INCLOMPLETE\",\n                          \"id\": 10 \n                      }\n                    ]\n              }, \n              { \n                  \"name\": \"J\",\n                  \"description\": \"Node J\",\n                  \"status\": \"INCLOMPLETE\",\n                  \"id\": 11 \n              }\n            ]\n        }\n      ]\n    }\n}\n","import {\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  DELETE_NODE,\n  CLOSE_MODAL\n} from '../actions/constants';\n\nconst initialState = {\n    modalIsOpen: false,\n    shouldCloseOnOverlayClick: true\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case INIT_CREATE_NODE: {\n      return {\n        ...state,\n        modalIsOpen: true\n      };\n    }\n\n    case INIT_EDIT_NODE: {\n      return {\n        ...state,\n        modalIsOpen: true\n      }\n    }\n\n    case CREATE_NODE:\n    case EDIT_NODE:\n    case DELETE_NODE:\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        modalIsOpen: false\n      }\n    } \n\n    default:\n      return state;\n  }\n}\n","import {\n  INIT_CREATE_NODE,\n  CREATE_NODE,\n  INIT_EDIT_NODE,\n  EDIT_NODE,\n  // DELETE_NODE,\n  CLOSE_MODAL\n} from '../actions/constants';\n\nconst MODES = {\n  DEFAULT: null,\n  CREATE: 'CREATE',\n  EDIT: 'EDIT'\n}\n\nconst initialState = {\n    mode: MODES.DEFAULT,\n    formData: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n      case INIT_CREATE_NODE: {\n        return {\n          ...state,\n          mode: MODES.CREATE\n        };\n      }\n\n      case INIT_EDIT_NODE: {\n        return {\n          ...state,\n          mode: MODES.EDIT\n        }\n      }\n\n      case EDIT_NODE: {\n        const {\n          id,\n          name,\n          description\n        } = action.payload;\n\n        return {\n          ...state,\n          mode: MODES.EDIT,\n          formData: {\n            id,\n            name,\n            description\n          }\n        };\n      }\n\n      case CREATE_NODE:\n      case CLOSE_MODAL: {\n        return {\n          ...state,\n          mode: MODES.DEFAULT\n        }\n      } \n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport tree from './tree';\nimport modal from './modal';\nimport form from './form';\n\nexport default combineReducers(\n\t{ \n\t\tmodal,\n\t\ttree,\n\t\tform \n\t}\n);\n","const loggerMiddleware = store => next => action => {\n  console.log('initial state:', store.getState())\n  console.log('dispatching:', action)\n  next(action)\n  console.log('next state:', store.getState())\n}\n\nexport default loggerMiddleware;\n","export function findNodeById (treeData, id) {\n\tlet node;\n\n\ttraverseTree(\n\t\ttreeData,\n\t\t(d) => {\n\t\t\tconst {\n\t\t\t\tdata\n\t\t\t} = d;\n\n\t\t\t/*\n\t\t\t\tIf D3 data (raw data processed using D3), each node will have a data property. \n\t\t\t\tIf it is just the raw data, it will be a regular object.\n\t\t\t*/\n\n\t\t\tif (data) {\n\t\t\t\tif (data.id === id) {\n\t\t\t\t\tnode = d\n\t\t\t\t}\n\t\t\t} else if (d.id === id) {\n\t\t\t\tnode = d;\n\t\t\t}\n\t\t}\n\t)\n\n\treturn node || {};\n}\n\nexport function getChildCount (node) {\n\tlet count = 0;\n\n\tif (!node._children) {\n\t\treturn count;\n\t}\n\n\ttraverseTree(\n\t\tnode,\n\t\t(d) => {\n\t\t\tconst {\n\t\t\t\tchildren,\n\t\t\t\t_children\n\t\t\t} = d;\n\n\t\t\tif (children && children.length) {\n\t\t\t\tcount += children.length;\n\t\t\t}\n\n\t\t\tif (_children && _children.length) {\n\t\t\t\tcount += _children.length\n\t\t\t}\n\t\t}\n\t);\n\n\treturn count;\n}\n\nexport function getMaxId (treeData) {\n\tlet maxId = 0;\n\n\ttraverseTree(\n\t\ttreeData,\n\t\t(d) => {\n\t\t\tif (d.id > maxId) {\n\t\t\t\tmaxId = d.id;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn maxId;\n}\n\nexport function traverseTree (treeData, iterator) {\n\titerator(treeData);\n\n\tfunction traverseChildren (node) {\n\t\tconst {\n\t\t\tchildren,\n\t\t\t_children\n\t\t} = node;\n\n\t\tlet allChildren = [];\n\n\t\tif (children && children.length) {\n\t\t\tallChildren = allChildren.concat(children);\n\t\t}\n\n\t\tif (_children && _children.length) {\n\t\t\tallChildren = allChildren.concat(_children);\n\t\t}\n\n\t\treturn allChildren.length ? allChildren : null;\n\t}\n\n\tconst children = traverseChildren(treeData);\n\t\n\tif (children) {\n\t    children.forEach((child) => traverseTree(\n\t    \tchild,\n\t    \titerator\n\t    ));\n\t}\n}\n","import {\n\tfindNodeById,\n\tgetMaxId\n} from '../../helpers';\n\nimport {\n\tCREATE_NODE,\n\tMOVE_NODE,\n\tEDIT_NODE,\n\tDELETE_NODE,\n\tTOGGLE_NODE\n} from '../actions/constants';\n\nconst treeMiddleware = store => next => action => {\n\tconst {\n\t\ttree: {\n\t\t\tdata\n\t\t}\n\t} = store.getState();\n\n\tswitch (action.type) {\n\t\tcase CREATE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tparentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst parentNode = findNodeById(data, parentId);\n\t\t\tconst maxId = getMaxId(data);\n\n\t\t\tconst newNode = {\n\t\t\t\tid: maxId + 1,\n\t\t\t\tname,\n\t\t\t\tdescription\n\t\t\t};\n\n\t\t\tconst isCollapsed = parentNode._children && parentNode._children.length;\n\t\t\tconst childProp = isCollapsed ? '_children' : 'children';\n\n\t\t\tparentNode[ childProp ] && parentNode[ childProp ].length ? \n\t\t\t  parentNode[ childProp ].push(newNode) :\n\t\t\t  parentNode[ childProp ] = [ newNode ];\n\n\t\t\t Object.assign(\n\t\t\t \taction.payload,\n\t\t\t \t{\n\t\t\t \t\tid: newNode.id\n\t\t\t \t}\n\t\t\t );\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase EDIT_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\n\t\t\tObject.assign(\n\t\t\t\tnodeDataObject,\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase DELETE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tparentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst parentNodeDataObject = findNodeById(data, parentId);\n\n\t\t\tconst deletedNodeIndex = parentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.findIndex((childNode) => childNode.id === id);\n\n\t\t\tparentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.splice(deletedNodeIndex, 1);\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase TOGGLE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\t\t\tconst { \n\t\t\t\tchildren,\n\t\t\t\t_children\n\t\t\t} = nodeDataObject;\n\n\t\t\tif (children && children.length) {\n\t\t\t\tnodeDataObject._children = children;\n\t\t\t\tnodeDataObject.children = null;\n\t\t\t} else if (_children && _children.length) {\n\t\t\t\tnodeDataObject.children = _children;\n\t\t\t\tnodeDataObject._children = null;\n\t\t\t}\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tcase MOVE_NODE: {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tid,\n\t\t\t\t\tparentId,\n\t\t\t\t\tnewParentId\n\t\t\t\t}\n\t\t\t} = action;\n\n\t\t\tconst nodeDataObject = findNodeById(data, id);\n\t\t\tconst originalParentNodeDataObject = findNodeById(data, parentId);\n\t\t\tconst newParentNodeDataObject = findNodeById(data, newParentId);\n\n\t\t\tconst isCollapsed = newParentNodeDataObject._children && newParentNodeDataObject._children.length;\n\t\t\tconst childProp = isCollapsed ? '_children' : 'children';\n\n\t\t\tconst childNodeIndex = originalParentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.findIndex((childNode) => childNode.id === nodeDataObject.id);\n\n\t\t\toriginalParentNodeDataObject\n\t\t\t\t.children\n\t\t\t\t.splice(childNodeIndex, 1);\n\n\t\t\tif (newParentNodeDataObject[ childProp ] && newParentNodeDataObject[ childProp ].length) {\n\t\t\t\tnewParentNodeDataObject\n\t\t\t\t\t[ childProp ]\n\t\t\t\t\t.push(nodeDataObject);\n\t\t\t} else {\n\t\t\t\tnewParentNodeDataObject[ childProp ] = [ nodeDataObject ];\n\t\t\t}\n\n\t\t\treturn next(action);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn next(action);\n\t}\n}\n\nexport default treeMiddleware;\n","import { \n\tcreateStore, \n\tapplyMiddleware \n} from 'redux';\n\nimport rootReducer from '../reducers';\nimport loggerMiddleware from '../middleware/logger';\nimport treeMiddleware from '../middleware/tree';\n\nimport {\n\tgetState,\n\tsaveState\n} from './local-storage';\n\nconst existingState = getState();\n\nconst store = createStore(\n\trootReducer,\n\texistingState,\n\tapplyMiddleware(\n\t\tloggerMiddleware,\n\t\ttreeMiddleware\n\t)\n);\n\nstore.subscribe(\n\t() => saveState(store.getState())\n);\n\nexport default store;\n","export const saveState = (state) => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\t\tlocalStorage.setItem('state', serializedState);\n\t} catch {}\n}\n\nexport const getState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem('state');\n\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serializedState);\n\t} catch {\n\t\treturn undefined;\n\t}\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Tooltip from '../tooltip/Tooltip';\nimport './Tree.css';\nimport {\n\tmoveNode\n} from '../../redux/actions';\n\nimport TreeGraph from './render';\n\nlet treeGraph;\n\nfunction Tree() {\t\n\treturn (\n\t  <div className='Tree'>\n\t  \t<div id='decision-tree-container'>\n\t  \t\t<Tooltip />\n\t  \t</div>\n\t  </div>\t\n\t);\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\tsetTimeout (() => {\n\t\ttreeGraph = new TreeGraph({ dispatch });\n\t\ttreeGraph.render({ data: {} });\n\t}, 300);\n\n\treturn {\n\t\tmoveNode: (...args) => dispatch(moveNode(...args))\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst {\n\t\ttree\n\t} = state;\n\n\tif (!tree || !tree.shouldUpdate) {\n\t\treturn;\n\t}\n\n\tsetTimeout(() => {\n\t\ttreeGraph.render(tree);\n\t\treturn state;\n\t}, 500);\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Tree);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport './Tooltip.css';\n\nimport {\n  initCreateNode,\n  initEditNode,\n  toggleNode\n} from '../../redux/actions';\n\nclass TooltipComponent extends React.Component {\n    render () {\n        const {\n          x, \n          y, \n          isActive\n        } = this.props;\n\n        const styles = {\n          display: isActive ? 'block' : 'none',\n          left: `${y + 110}px`,\n          top: `${x - 20}px`\n        };\n\n        return (\n          <div className='Tooltip' style={ styles }>\n            <button onClick={ \n              () => this.props.initCreateNode(this.props.id) \n            }>Create Subnode</button>\n\n            <button onClick={\n              () => this.props.initEditNode({\n                id: this.props.id,\n                parentId: this.props.parentId\n              })\n            }>Edit</button>\n\n            {\n              this.props.children || this.props._children ?\n                <button onClick={ \n                  () => this.props.toggleNode(this.props.id)\n                }>{ this.props._children ? 'Expand' : 'Collapse' }</button>\n              : null\n            }\n          </div>\n        );\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    initCreateNode: (...args) => dispatch(initCreateNode(...args)),\n    initEditNode: (...args) => dispatch(initEditNode(...args)),\n    toggleNode: (...args) => dispatch(toggleNode(...args))\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    tree: {\n      activeNode\n    }\n  } = state;\n\n  if (activeNode && activeNode.activeState === 'SHOW_OPTIONS' && activeNode.id !== ownProps.id) {\n    const {\n      id,\n      parentId,\n      position: {\n        x, y\n      },\n      children,\n      _children\n    } = activeNode;\n\n    return {\n      isActive: true,\n      id,\n      parentId,\n      x,\n      y,\n      children,\n      _children\n    }\n  } else {\n    return {\n      isActive: false\n    }\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TooltipComponent);\n\n","import {\n\tSHOW_NODE_OPTIONS,\n\tINIT_CREATE_NODE,\n\tCREATE_NODE,\n\tINIT_EDIT_NODE,\n\tEDIT_NODE,\n\tDELETE_NODE,\n\tINIT_MOVE_NODE,\n\tMOVE_NODE,\n\tCLOSE_MODAL,\n\tTOGGLE_NODE\n} from './constants';\n\nexport const showNodeOptions = ({ \n\tid, \n\tparentId,\n\tposition,  \n\tchildren,\n\t_children\n}) => ({\n\ttype: SHOW_NODE_OPTIONS,\n\tpayload: {\n\t\tid,\n\t\tparentId,\n\t\tposition,\n\t\t_children,\n\t\tchildren\n\t}\n});\n\nexport const initCreateNode = parentId => ({\n\ttype: INIT_CREATE_NODE,\n\tpayload: {\n\t\tparentId\n\t}\n});\n\nexport const createNode = ({ name, parentId, description }) => ({\n\ttype: CREATE_NODE,\n\tpayload: {\n\t\tname,\n\t\tdescription,\n\t\tparentId\n\t}\n});\n\nexport const initEditNode = ({ id, parentId }) => ({\n\ttype: INIT_EDIT_NODE,\n\tpayload: {\n\t\tid,\n\t\tparentId\n\t}\n});\n\nexport const editNode = ({ id, name, description, status }) => ({\n\ttype: EDIT_NODE,\n\tpayload: {\n\t\tid,\n\t\tname,\n\t\tdescription,\n\t\tstatus\n\t}\n});\n\nexport const deleteNode = ({ id, parentId }) => ({\n\ttype: DELETE_NODE,\n\tpayload: {\n\t\tid,\n\t\tparentId\n\t}\n});\n\nexport const initMoveNode = id => ({\n\ttype: INIT_MOVE_NODE,\n\tpayload: {\n\t\tid\n\t}\n});\n\nexport const moveNode = (id, parentId, newParentId) => ({\n\ttype: MOVE_NODE,\n\tpayload: {\n\t\tid,\n\t\tparentId,\n\t\tnewParentId\n\t}\n});\n\nexport const toggleNode = id => ({\n\ttype: TOGGLE_NODE,\n\tpayload: { id }\n});\n\nexport const closeModal = () => ({\n\ttype: CLOSE_MODAL\n});\n","import * as d3 from 'd3'\n\nimport {\n\tSHOW_NODE_OPTIONS,\n\tINIT_MOVE_NODE,\n\tMOVE_NODE\n} from '../../redux/actions/constants';\n\nimport {\n\tgetChildCount\n} from '../../helpers';\n\nexport default class TreeGraph {\n\n\tconstructor ({ dispatch }) {\n\t\tconst bindObj = this;\n\t\tthis.selectedNode = null;\n\t\tthis.draggingNode = null;\n\n\t\tthis.dispatch = dispatch;\n\n\t\tthis.panSpeed = 200;\n\t\tthis.panBoundary = 20;\n\n\t\tthis.i = 0;\n\t\tthis.duration = 750;\n\n\t\tthis.viewerWidth = document.body.clientWidth * 2;\n\t\t// this.viewerHeight = document.body.clientHeight;\n\t\tthis.viewerHeight = 400;\n\n\t\tthis.tree = d3.tree().size([\n\t\t\tbindObj.viewerHeight,\n\t\t\tbindObj.viewerWidth\n\t\t]);\n\n\t\tthis.baseSvg = d3.select('#decision-tree-container')\n\t\t\t.append('svg')\n\t\t\t.attr('width', bindObj.viewerWidth)\n\t\t\t.attr('height', bindObj.viewerHeight)\n\t\t\t.attr('class', 'overlay');\n\n\t\tthis.g = d3.select('#decision-tree-container svg')\n\t\t\t.append('g')\n\t\t\t.attr('transform', 'translate(80,0)');\n\n\t\tthis.dragBehavior = this.dragListener();\n\t}\n\n\trender (treeData) {\n\t\tconst {\n\t\t\tdata,\n\t\t\tactiveNode\n\t\t} = treeData;\n\n\t\tthis.treeData = data;\n\n\t\t// if (activeNode) {\n\t\t// \tlet nodeToUpdate;\n\t\t// \tswitch (activeNode.activeState) {\n\t\t// \t\tcase 'CREATE':\n\t\t// \t\t\tconst newTree = d3.hierarchy(data);\n\t\t// \t\t\treturn this.update(newTree);\n\n\t\t// \t\tcase 'EDIT':\n\t\t// \t\t\tnodeToUpdate = findNodeById(this.root, activeNode.id);\n\t\t// \t\t\treturn this.update(nodeToUpdate);\n\t\t// \t}\n\t\t// }\n\n\t\tthis.root = d3.hierarchy(this.treeData);\n\t\tthis.root.x0 = this.viewerHeight / 2; //work with this\n\t\tthis.root.y0 = 100; //should be dynamic\n\t\tthis.update(this.root);\n\t}\n\n\tdragListener () {\n\t\tconst bindObj = this;\n\n\t\tfunction dragStarted (node) {\n\t\t\tif (node === bindObj.root) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbindObj.dragStarted = true;\n\n\t\t\tbindObj.dispatchActions({\n\t\t\t\ttype: INIT_MOVE_NODE,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: node.data.id\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction dragged (node) {\n\t\t\tif (bindObj.dragStarted) {\n\t\t\t\tbindObj.domNode = this;\n\n\t\t\t\td3.select(this)\n\t\t\t\t\t.select('.ghostCircle')\n\t\t\t\t\t.attr('pointer-events', 'none');\n\n\t\t\t\td3.selectAll('.ghostCircle')\n\t\t\t\t\t.attr('class', 'ghostCircle show');\n\n\t\t\t\td3.select(this)\n\t\t\t\t\t.attr('class', 'node activeDrag');\n\n\t\t\t\tbindObj.g.selectAll('path.link')\n\t\t\t\t\t.data(\n\t\t\t\t\t\tbindObj.root.links(),\n\t\t\t\t\t\t(d) => d.target.id\n\t\t\t\t\t)\n\t\t\t\t\t.filter((d, i) => d.target.id === node.id)\n\t\t\t\t\t.remove();\n\n\t\t\t\td3.select(this)\n\t\t\t\t\t// .attr('cx', (d) => node.x = d3.event.x)\n\t\t\t\t\t// .attr('cy', (d) => node.y = d3.event.y)\n\t\t\t\t\t.attr('cx', (d) => node.y0 = d3.event.x)\n\t\t\t\t\t.attr('cy', (d) => node.x0 = d3.event.y)\n\t\t\t\t\t.attr(\n\t\t\t\t\t\t'transform', \n\t\t\t\t\t\t(d) => `translate(${d.y0 - 115},${d.x0 + 120})`\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfunction dragEnded (node) {\n\t\t\td3.selectAll('.ghostCircle')\n\t\t\t\t.attr('class', 'ghostCircle');\n\n\t\t\tif (!bindObj.selectedNode) {\n\t\t\t\treturn bindObj.update(node);\n\t\t\t}\n\n\t\t\tbindObj.moveNode(\n\t\t\t\tnode,\n\t\t\t\tbindObj.selectedNode\n\t\t\t);\n\n\t\t\td3.select(this)\n\t\t\t\t.attr('stroke', null);\n\t\t}\n\n\t\tfunction overCircle (node) {\n\t\t\tbindObj.selectedNode = node;\n\t\t\td3.select(this)\n\t\t\t\t.style('fill', 'blue');\n\t\t}\n\n\t\tfunction outCircle (node) {\n\t\t\tbindObj.selectedNode = null;\n\t\t\td3.select(this)\n\t\t\t\t.style('fill', 'red');\n\t\t}\n\n\t\treturn {\n\t\t\tdragStarted,\n\t\t\tdragged,\n\t\t\tdragEnded,\n\t\t\toverCircle,\n\t\t\toutCircle\n\t\t};\n\t}\n\n\tdispatchActions (action) {\n\t\tthis.dispatch(action);\n\t}\n\n\tshowNodeOptions (node) {\n\t\tthis.dispatchActions({\n\t\t\ttype: SHOW_NODE_OPTIONS,\n\t\t\tpayload: {\n\t\t\t\tid: node.data.id,\n\t\t\t\tparentId: node.parent ? node.parent.data.id : null,\n\t\t\t\tposition: {\n\t\t\t\t\tx: node.x,\n\t\t\t\t\ty: node.y\n\t\t\t\t},\n\t\t\t\t_children: node.data._children,\n\t\t\t\tchildren: node.data.children \n\t\t\t}\n\t\t});\n\t}\n\n\tmoveNode(node, newParentNode) {\n\t\tthis.dispatchActions({\n\t\t\ttype: MOVE_NODE,\n\t\t\tpayload: {\n\t\t\t\tid: node.data.id,\n\t\t\t\tparentId: node.parent.data.id,\n\t\t\t\tnewParentId: newParentNode.data.id\n\t\t\t}\n\t\t});\n\t}\n\n\toverCircle (node) {\n\t\tthis.selectedNode = node;\n\t}\n\n\toutCircle () {\n\t\tthis.selectedNode = null;\n\t}\n\n\tclick (node) {\n\t\tif (d3.event.defaultPrevented) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragStarted = false;\n\t\tthis.showNodeOptions(node);\n\t\t// this.toggle(node);\n\t}\n\n\tdblClick (node) {\n\t\tthis.initCreateNode(node);\n\t}\n\n\tmouseDown (node) {\n\t\tconst bindObj = this;\n\t\tthis.mouseIsHeld = true;\n\t\tsetTimeout(() => {\n\t\t\tif (!this.mouseIsHeld) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbindObj.initEditNode(node);\n\t\t}, 300);\n\t}\n\n\tmouseUp (node) {\n\t\tconsole.log('mouseUp!')\n\t\tthis.mouseIsHeld = false;\n\t}\n\n\tupdate (source) {\n\t\tconst bindObj = this;\n\n\t\tthis.tree(this.root);\n\t\tthis.root.each((d) => {\n\t\t\td.y = d.depth * 200\n\t\t});\n\n\t\tconst node = this.g.selectAll('.node')\n\t\t\t.data(\n\t\t\t\tbindObj.root.descendants(), \n\t\t\t\t(d) => d.id || (d.id = ++bindObj.i)\n\t\t\t);\n\n\t\tconst nodeEnter = node\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', 'node')\n\t\t\t.attr('transform', (d) => `translate(${source.y0}, ${source.x0})`)\n\t\t\t.on('click', bindObj.click.bind(bindObj))\n\t\t\t// .on('dblclick', bindObj.dblClick.bind(bindObj))\n\t\t\t// .on('mouseup', bindObj.mouseUp.bind(bindObj))\n\t\t\t// .on('mousedown', bindObj.mouseDown.bind(bindObj))\n\t\t\t.call(\n\t\t\t\td3.drag()\n\t\t\t\t.on('start', bindObj.dragBehavior.dragStarted)\n\t\t\t\t.on('drag', bindObj.dragBehavior.dragged)\n\t\t\t\t.on('end', bindObj.dragBehavior.dragEnded)\n\t\t\t);\n\n\t\tnodeEnter.append('circle')\n\t\t\t.attr('r', 0)\n\t\t\t.transition()\n\t\t\t.attr('r', (d) => {\n\t\t\t\t\tconst childCount = getChildCount(d.data);\n\t\t\t\t\treturn childCount ? childCount * 4 : 6\n\t\t\t})\n\t\t\t.attr('class', 'nodeCircle')\n\t\t\t.style(\n\t\t\t\t'fill',\n\t\t\t\t(d) => d.data.status === 'COMPLETE' ? '#3CB371' :\n\t\t\t\t\td.data._children ? 'lightsteelblue' : \n\t\t\t\t\t'#fff'\n\t\t\t);\n\n\t\tnodeEnter.append('text')\n\t\t\t.attr('x', (d) => d.children || d.data._children ? -10 : 10)\n\t\t\t.attr('dy', '.35em')\n\t\t\t.attr('font-size', '150%')\n\t\t\t.attr('class', 'nodeText')\n\t\t\t.attr('text-anchor', (d) => d.children || d.data._children ? 'end' : 'start')\n\t\t\t.text((d) => d.data.name)\n\t\t\t.style('fill-opacity', 0);\n\n\t\tnodeEnter.append('circle')\n\t\t\t.attr('class', 'ghostCircle')\n\t\t\t.attr('r', 20)\n\t\t\t.attr('opacity', 0.2)\n\t\t\t.style('fill', 'red')\n\t\t\t.attr('pointer-events', 'mouseover')\n\t\t\t.on('mouseover', bindObj.dragBehavior.overCircle)\n\t\t\t.on('mouseout', bindObj.dragBehavior.outCircle);\n\n\t\tconst nodeUpdate = nodeEnter.merge(node);\n\n\t\tnodeUpdate\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t(d) => `translate(${d.y},${d.x})`\n\t\t\t);\n\n\t\tnodeUpdate.select('circle.nodeCircle')\n\t\t\t.attr('r', (d) => {\n\t\t\t\t\tconst childCount = getChildCount(d.data);\n\t\t\t\t\treturn childCount ? childCount * 4 : 6\n\t\t\t})\n\t\t\t.style(\n\t\t\t\t'fill',\n\t\t\t\t(d) => d.data.status === 'COMPLETE' ? '#3CB371' :\n\t\t\t\t\td.data._children ? 'lightsteelblue' : \n\t\t\t\t\t'#fff'\n\t\t\t);\n\n\t\tnodeUpdate\n\t\t\t.select('text')\n\t\t\t.transition()\n\t\t\t.attr('x', \n\t\t\t\t(d) => \n\t\t\t\t\td.children ? -10 :\n\t\t\t\t\td.data._children ? (-10 - (d.data._children.length * 2)) : \n\t\t\t\t\t10\n\t\t\t)\n\t\t\t.style('fill-opacity', 1);\n\n\t\tconst nodeExit = node\n\t\t\t.exit()\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t`translate(${source.y}, ${source.x})`\n\t\t\t)\n\t\t\t.remove();\n\n\t\tnodeExit\n\t\t\t.select('circle')\n\t\t\t.attr('r', 0);\n\n\t\tnodeExit\n\t\t\t.select('text')\n\t\t\t.style('fill-opacity', 0);\n\n\t\tconst link = this.g.selectAll('.link')\n    \t\t.data(\n    \t\t\tbindObj.root.links(), \n    \t\t\t(d) => d.target.id\n    \t\t);\n\n\t\tconst linkEnter = link\n\t\t\t.enter()\n\t\t\t.insert('path', 'g')\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => source.y0)\n\t\t\t\t.y((d) => source.x0)\n\t\t\t);\n\n\t\tconst linkUpdate = linkEnter.merge(link);\n\n\t\tlinkUpdate\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => d.y)\n\t\t\t\t.y((d) => d.x)\n\t\t\t);\n\n\t\tlink.exit()\n\t\t\t.transition()\n\t\t\t.duration(bindObj.duration)\n\t\t\t.attr('d', d3.linkHorizontal()\n\t\t\t\t.x((d) => source.y0)\n\t\t\t\t.y((d) => source.x0)\n\t\t\t)\n\t\t\t.remove();\n\n\t\tnode.each((d) => {\n\t\t\td.x0 = d.x;\n\t\t\td.y0 = d.y\n\t\t});\n\t}\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Form.css';\n\nimport {\n  findNodeById\n} from '../../helpers';\n\nimport {\n  createNode,\n  editNode,\n  deleteNode\n} from '../../redux/actions';\n\nimport fields from './fields.json';\n\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { \n        name: this.props.formData.name || 'Name of Node',\n        description: this.props.formData.description || 'Description of Node'\n      };\n    }\n\n    updateInput = (input, inputName) => {\n      this.setState({\n        [ inputName ]: input.target.value \n      });\n    }\n\n    render () {\n        const fieldMode = fields[ this.props.mode ];\n\n        return (\n          <div className='Form'>\n            <h2 className='FormTitle'>{ fieldMode.title }</h2>\n            <form>\n              { \n                fieldMode.inputs.map((inputValues) => {\n                  return (\n                    <div className={ `FormInput FormInput_${ inputValues.title }` }>\n                      <h4>{ inputValues.title }</h4>\n                      <input\n                        type=\"text\"\n                        value={ this.state[inputValues.name] }\n                        onChange={ \n                          (input) => this.updateInput(input, inputValues.name) \n                        }\n                      >\n                      </input>\n                    </div>\n                  );\n                })                 \n              }\n\n              {\n                this.props.mode === 'CREATE' ?\n                  <div>\n                    <button className='FormButton' \n                      onClick={\n                        () => this.props.createNode({\n                            parentId: this.props.formData.parentId,\n                            name: this.state.name,\n                            description: this.state.description\n                        })\n                      }\n                    >\n                      Create Node\n                    </button>\n                  </div>\n                :\n                this.props.mode === 'EDIT' ?\n                  <div>\n                    <button className='FormButton' \n                      onClick={\n                        () => this.props.editNode({\n                            id: this.props.formData.id,\n                            name: this.state.name,\n                            description: this.state.description\n                        })\n                      }\n                    > \n                      Update Node\n                    </button>\n                    <button className='FormButton' \n                      onClick={\n                        () => this.props.editNode({\n                          id: this.props.formData.id,\n                          status: 'COMPLETE',\n                          name: this.state.name,\n                          description: this.state.description\n                        })\n                      }\n                    >\n                      Mark As Complete\n                    </button>\n                    <button className='FormButton' \n                      onClick={\n                        () => this.props.deleteNode({\n                          id: this.props.formData.id,\n                          parentId: this.props.formData.parentId\n                        })\n                      }\n                    >\n                      Delete\n                    </button> \n                  </div>\n                : null  \n              }                 \n            </form>\n          </div>\n        );\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    createNode: (...args) => dispatch(createNode(...args)),\n    editNode: (...args) => dispatch(editNode(...args)),\n    deleteNode: (...args) => dispatch(deleteNode(...args))\n});\n\nconst mapStateToProps = state => {\n  const {\n    form: {\n      mode\n    },\n    tree: {\n      activeNode,\n      data\n    }\n  } = state;\n\n  if (!mode || !activeNode) {\n    return;\n  }\n\n  const {\n    id,\n    parentId\n  } = activeNode;\n\n  const {\n    name,\n    description,\n    status\n  } = findNodeById(data, id);\n\n  return {\n    mode,\n    formData: {\n      id,\n      parentId,\n      name,\n      description\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactModal from 'react-modal';\nimport Form from '../form/Form';\nimport './Modal.css';\n\nimport {\n  closeModal\n} from '../../redux/actions';\n\nReactModal.setAppElement('#root');\n\nclass ModalComponent extends React.Component {\n    render () {\n        return (\n          <div>\n            <ReactModal\n              isOpen={this.props.modalIsOpen}\n              shouldCloseOnOverlayClick={true}\n              className='Modal'\n            >\n              <div className='CloseButton' onClick={ this.props.closeModal } />\n              <Form />\n            </ReactModal>\n          </div>\n        );\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    closeModal: () => dispatch(closeModal())\n});\n\nconst mapStateToProps = state => {\n  const {\n    modal: {\n      modalIsOpen,\n      shouldCloseOnOverlayClick\n    }\n  } = state;\n\n  return {\n    modalIsOpen,\n    shouldCloseOnOverlayClick\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalComponent);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport DecisionTree from './DecisionTree';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<DecisionTree />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n","import React from 'react';\n// import Header from './components/header/Header';\nimport Tree from './components/tree/Tree';\nimport Modal from './components/modal/Modal';\nimport './DecisionTree.css';\n\nexport default function DecisionTree() {\n  return (\n    <div className=\"App\">\n      <Modal />\n      <Tree />\n    </div>\n  );\n}\n"],"sourceRoot":""}